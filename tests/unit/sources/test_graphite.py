from datetime import datetime
import unittest

from babelchart.sources.graphite import GraphiteSource


GRAPHITE_RESULT = [
                    {"target": "s1", "datapoints": [[1.3846153846153846, 1393885800], [1.4899999999999998, 1393887600], [1.4499999999999997, 1393889400], [1.6400000000000001, 1393891200], [1.5066666666666668, 1393893000], [1.5866666666666669, 1393894800], [1.5066666666666668, 1393896600], [1.4833333333333334, 1393898400], [1.5933333333333337, 1393900200], [1.2566666666666668, 1393902000], [1.206666666666667, 1393903800], [1.1999999999999997, 1393905600], [1.0599999999999998, 1393907400], [1.0666666666666667, 1393909200], [1.0733333333333335, 1393911000], [0.91666666666666663, 1393912800], [0.94666666666666688, 1393914600], [0.87333333333333318, 1393916400], [0.83666666666666667, 1393918200], [0.63000000000000023, 1393920000], [0.66666666666666663, 1393921800], [0.59666666666666657, 1393923600], [0.61333333333333317, 1393925400], [0.6100000000000001, 1393927200], [0.68333333333333324, 1393929000], [0.86666666666666681, 1393930800], [0.78666666666666663, 1393932600], [0.9933333333333334, 1393934400], [0.91333333333333344, 1393936200], [1.0333333333333334, 1393938000], [1.1333333333333335, 1393939800], [1.2166666666666666, 1393941600], [1.2, 1393943400], [1.156666666666667, 1393945200], [1.1599999999999999, 1393947000], [1.2066666666666668, 1393948800], [1.2033333333333331, 1393950600], [1.1466666666666669, 1393952400], [1.1266666666666665, 1393954200], [1.2400000000000004, 1393956000], [1.1000000000000001, 1393957800], [1.2300000000000002, 1393959600], [1.1233333333333335, 1393961400], [1.1499999999999999, 1393963200], [1.2, 1393965000], [1.3833333333333335, 1393966800], [1.3900000000000001, 1393968600], [1.3133333333333332, 1393970400], [1.447058823529412, 1393972200]]},
                    {"target": "s2", "datapoints": [[0.8307692307692307, 1393885800], [0.92000000000000048, 1393887600], [0.76000000000000001, 1393889400], [0.54666666666666675, 1393891200], [0.49999999999999983, 1393893000], [0.41333333333333339, 1393894800], [0.39666666666666661, 1393896600], [0.33666666666666667, 1393898400], [0.28333333333333333, 1393900200], [0.29333333333333328, 1393902000], [0.35000000000000003, 1393903800], [0.33666666666666673, 1393905600], [0.35333333333333322, 1393907400], [0.44, 1393909200], [0.47666666666666679, 1393911000], [0.62666666666666671, 1393912800], [0.72666666666666679, 1393914600], [0.91000000000000003, 1393916400], [1.0700000000000003, 1393918200], [1.27, 1393920000], [1.3299999999999998, 1393921800], [1.3866666666666665, 1393923600], [1.4233333333333331, 1393925400], [1.5566666666666669, 1393927200], [1.6166666666666665, 1393929000], [1.7533333333333332, 1393930800], [1.8733333333333337, 1393932600], [1.9800000000000006, 1393934400], [1.9466666666666661, 1393936200], [2.1099999999999999, 1393938000], [2.2699999999999991, 1393939800], [2.1766666666666672, 1393941600], [1.9700000000000002, 1393943400], [2.0866666666666664, 1393945200], [2.3033333333333337, 1393947000], [2.416666666666667, 1393948800], [2.52, 1393950600], [2.3166666666666669, 1393952400], [2.3833333333333337, 1393954200], [2.3566666666666669, 1393956000], [2.5800000000000005, 1393957800], [2.1866666666666665, 1393959600], [2.2000000000000006, 1393961400], [1.9633333333333334, 1393963200], [1.6900000000000002, 1393965000], [1.5166666666666668, 1393966800], [1.1900000000000004, 1393968600], [1.1299999999999999, 1393970400], [1.0999999999999999, 1393972200]]}
                  ]

class TestGraphiteSource(unittest.TestCase):

    def test_to_series(self):
        tss = GraphiteSource.to_series(GRAPHITE_RESULT)

        for r in range(0, len(GRAPHITE_RESULT)):
            self.assertEqual(tss[r].label, GRAPHITE_RESULT[r]["target"])

            for i in [0, 1, 3, 7, 10]:
                self.assertEqual(tss[r].data[i].dt, datetime.fromtimestamp(GRAPHITE_RESULT[r]["datapoints"][i][1]))
                self.assertEqual(tss[r].data[i].value, GRAPHITE_RESULT[r]["datapoints"][i][0])
